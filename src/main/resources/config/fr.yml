# Configuration principale de GrimAC
# Code source : https://github.com/MWHunter/Grim
# Copyright 2022 DefineOutside et contributeurs, sous licence GPLv3.
# Les binaires modifiés, ou les plugins avec du code sinistre copié, doivent être privés,
# ou avec le code source complet disponible pour les acheteurs sans frais supplémentaires.

alerts:
  # En plus de diffuser des alertes aux joueurs, doivent-elles également être envoyées à la console ?
  print-to-console: true
  # Cela contrôle si/comment les alertes sont partagées entre les serveurs connectés à votre proxy.
  # Vous devez avoir 'bungee-plugin-message-channel' activé dans la configuration de votre Velocity si Velocity est utilisé.
  proxy:
    # Les alertes doivent-elles être envoyées à d'autres serveurs connectés à votre proxy ?
    send: false
    # Les alertes reçues des autres serveurs doivent-elles être annoncées à ce serveur ?
    receive: false

verbose:
  print-to-console: false

client-brand:
  # Cela signifie qu'il ne diffusera pas leur marque aux opérateurs si la marque correspond aux regex suivantes
  ignored-clients:
    - "^vanilla$"
    - "^fabric$"
    - "^lunarclient:[a-z0-9]{7}"
    - "^Feather Fabric$"

spectators:
  # Masquez tous les spectateurs avec l'autorisation grim.spectator, qu'ils soient réellement spectateurs actifs
  hide-regardless: false
  # Rendra les spectateurs cachés uniquement dans ces mondes, garder vide pour autoriser tous les mondes
  allowed-worlds:
    - ""

# Combien de temps les joueurs doivent-ils avoir jusqu'à ce qu'on les expulse pour temporisation ? Par défaut = 60 secondes
max-transaction-time: 60

Simulation:
  # Combien devrions-nous multiplier l'avantage total par lorsque le joueur est légitime
  # Voici à quoi ressemble la configuration par défaut (axe x = secondes, axe y = bloc 1/1000) : https://www.desmos.com/calculator/d4ufgxrxer
  setback-decay-multiplier: 0.999
  # Quelle est la taille d'un décalage par rapport au mouvement du joueur pour lequel devrions-nous créer une violation ?
  # Mesuré en blocs à partir du mouvement possible
  # Nous comptabilisons Optifine en changeant de table trigonométrique, mais le laisser tomber à 0,001 réduira FastMath
  # signaler l'anticheat si cette compensation ne fonctionne pas...
  threshold: 0.001
  # Quelle est l'ampleur d'une violation dans un tick avant que le joueur ne soit immédiatement contré ?
  # -1 pour désactiver
  immediate-setback-threshold: 0.1
  # Quelle est l'importance d'un avantage sur tous les ticks avant de commencer à reculer ?
  # -1 pour désactiver
  max-advantage: 1
  # Après 50 secondes avec la config par défaut, le joueur passera de 4 blocs -> 1 bloc d'avantage
  # C'est pour empêcher le joueur de rassembler trop de violations et de ne jamais pouvoir les éliminer toutes
  # Plafond d'avantage par défaut (axe x = secondes, axe y = bloc 1/1000) : https://www.desmos.com/calculator/4lovswdarj
  max-ceiling: 4

# Vérifie si un joueur est entré dans un bloc pendant un mouvement
Phase:
  setbackvl: 1 # Le glissement dans les blocs peut permettre l'escalade du mur, et ce contrôle est relativement stable
  decay: 0.005

AirLiquidPlace:
  cancelvl: 0

FabricatedPlace:
  cancelvl: 5

FarPlace:
  cancelvl: 5

PositionPlace:
  cancelvl: 5

RotationPlace:
  cancelvl: 5

# Pas de vérification lente basée sur la prédiction
# Grim rend compte du netcode bogué ici ... difficile à faux même en cas de spam avec un clic droit et un bouton désinvolte
# Beaucoup plus stable que les autres anticheats, mais veuillez signaler tout faux... J'ai corrigé une tonne de problèmes de netcode ici.
NoSlowA:
  # Quelle part d'un décalage correspond à la "triche"
  # Par défaut, c'est plus bas que les autres offs
  # Drapeaux par 0,03-0,2 de manière cohérente avec NoSlow activé
  threshold: 0.001
  # Reculez rapidement sur le premier élément pour supprimer tout avantage que NoSlow donne
  setbackvl: 5
  # Décomposition lorsque le joueur utilise un objet ET est ralenti par celui-ci
  decay: 0.05

Knockback:
  # Quelle part d'un décalage correspond à la "triche"
  # Par défaut, c'est 1e-5, qui est sûr et sain
  # Mesuré en blocs à partir du mouvement correct
  threshold: 0.001
  setbackvl: 3

Explosion:
  threshold: 0.001
  setbackvl: 3

TimerA:
  setbackvl: 10
  # Millisecondes que le joueur peut accumuler pour une utilisation ultérieure lorsqu'il prend du retard
  # Pourrait potentiellement permettre 1,8 utilisation rapide/guérison rapide/contournements d'arc rapides si réglé trop haut, 120 ms semble être un bon équilibre
  drift: 120

NegativeTimer:
  # Nombre de millisecondes perdues lors du déplacement avant de commencer à signaler
  drift: 1200

# Même méthode de vérification que TimerA, mais pour les véhicules
TimerVehicle:
  # Target 1.005 timer
  setbackvl: 10

EntityControl:
  setbackvl: 25

Reach:
  # De combien devrions-nous étendre les hitbox ? 0,0005 devrait détecter une portée supérieure à 3,0005
  #
  # Il y a une extension forcée de 0,03 avec 1.9-1.18.1 (pas 1.18.2), ou certaines combinaisons client/serveur en raison de
  # changements de protocole et limitations. Cette vérification est plus puissante avec les clients 1.7/1.8 sur les serveurs 1.8.
  threshold: 0.0005
  # Devrions-nous annuler les hits dont nous savons qu'ils sont impossibles ?
  # 3.00-3.03 les hits peuvent passer mais toujours être signalés, en raison des limitations de l'ordre des paquets
  block-impossible-hits: true
  # Cela enverra un paquet supplémentaire à la fin de chaque tick pour augmenter la probabilité d'attraper des tricheurs
  # Cela injecte dans la liste de connexion du serveur pour envoyer un dernier paquet juste avant que le serveur ne se vide
  # Activer cela augmentera l'utilisation de la bande passante pour tous les joueurs
  # Cela ne diminuera pas les performances globales du serveur
  # Activer ceci attrapera plus de tricheurs.
  # Laisser cette option désactivée attrapera toujours les tricheurs et ne provoquera pas de faux positifs
  # Sauf si vous êtes un serveur axé sur le PvP 1.8, ce paquet supplémentaire n'est pas recommandé
  enable-post-packet: false

# Activer les plugins de journalisation qui ont injecté dans netty lors de la jointure pour déboguer les problèmes de compatibilité
debug-pipeline-on-join: false

# Permet des contrôles expérimentaux
experimental-checks: false

# Grim annule parfois les paquets illégaux comme avec la minuterie, après X paquets en une seconde annulés, quand devrait-il
# nous bottons simplement le joueur ? Ceci est nécessaire car certains limiteurs de paquets ne comptent pas les paquets annulés par grim.
packet-spam-threshold: 100

config-version: 8
