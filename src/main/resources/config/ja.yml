# GrimACのメイン設定
# ソースコード: https://github.com/MWHunter/Grim
# Copyright 2024 DefineOutside and contributors, Licensed under GPLv3.
# 改変されたバイナリやGrimのコードをコピーしたプラグインは、私的なものとするか、
# 購入者に追加料金なしで完全なソースコードを公開する必要があります。

# "セットバック"は、プレイヤーが違反を犯したときに、プレイヤーを元の位置/状態に戻すことを意味します。

alerts:
  # プレイヤーへのアラートをブロードキャストするだけでなく、コンソールにも送信しますか？
  print-to-console: true
  # これは、プロキシに接続された他のサーバー間でアラートが共有される方法を制御します。
  # Velocityを使用している場合は、Velocityの設定で 'bungee-plugin-message-channel' を有効にする必要があります。
  proxy:
    # 他のプロキシに接続されたサーバーにアラートを送信しますか？
    send: false
    # 他のサーバーから受信したアラートをこのサーバーに通知しますか？
    receive: false

verbose:
  print-to-console: false

client-brand:
  # これは、ブランドが以下の正規表現と一致する場合、オペレーターにそのブランドをブロードキャストしないことを意味します
  ignored-clients:
    - "^vanilla$"
    - "^fabric$"
    - "^lunarclient:v\\d+\\.\\d+\\.\\d+-\\d{4}$"
    - "^Feather Fabric$"

spectators:
  # 実際にアクティブに観戦しているかどうかに関係なく、grim.spectator権限を持つすべての観戦者を非表示にしますか？
  hide-regardless: false
  # これらのワールドでのみ観戦者を非表示にします。すべてのワールドを許可するには空白のままにします
  allowed-worlds:
    - ""

# プレイヤーがタイムアウトでKickされるまでの時間を設定します | デフォルト= 60秒
max-transaction-time: 60

# 重複した移動パケットをキャンセルする必要がありますか？
# Mojangは1.21でこの問題を修正しました。これは "bucket desync" を修正しようとした彼らの試みでした。 https://bugs.mojang.com/browse/MC-12363
# この設定は、1.17-1.20.5クライアントが1.8サーバーでのみ適用されます。
cancel-duplicate-packet: true

# 重複パケットの回転を無視するかどうか
ignore-duplicate-packet-rotation: false

Simulation:
  # プレイヤーが正当な場合、総アドバンテージをどれだけ乗算する必要がありますか
  # これがデフォルトの設定です（x軸=秒、y軸=1/1000ブロック）：https://www.desmos.com/calculator/d4ufgxrxer
  setback-decay-multiplier: 0.999
  # プレイヤーの動きからどれだけのズレがあった場合に違反と判断しますか？
  # 動きの範囲内で許容されるズレをブロック単位で測定します
  # Optifineに対応するために三角関数のテーブルを切り替えて計算していますが、この値を0.001にするとFastMathの影響を軽減できます。
  # ただし、この補正がうまく機能しない場合、アンチチートが不正と判断する可能性があります...
  threshold: 0.001
  # プレイヤーが即座にセットバックされる前に、1ティックでどれだけの違反が発生すればいいかを指定します
  # -1で無効化
  immediate-setback-threshold: 0.1
  # どれだけのティック全体でのアドバンテージが発生すれば、セットバックを開始するかを指定します
  # -1で無効化
  max-advantage: 1
  # デフォルト設定では、50秒経過すると、プレイヤーのアドバンテージが4ブロックから1ブロックに減少します
  # これは、プレイヤーが違反を蓄積しすぎて、違反を解消できなくなるのを防ぐためです
  # デフォルトのアドバンテージの上限 (x軸 = 秒, y軸 = 1/1000ブロック): https://www.desmos.com/calculator/4lovswdarj
  max-ceiling: 4

# プレイヤーが移動中にブロックに入ったかどうかをチェックする。
Phase:
  setbackvl: 1 # 1ブロック以上のズレがある場合に違反と判断します
  decay: 0.005

AirLiquidPlace:
  cancelvl: 0

FabricatedPlace:
  cancelvl: 5

FarPlace:
  cancelvl: 5

PositionPlace:
  cancelvl: 5

RotationPlace:
  cancelvl: 5

# 予測に基づく「NoSlow」チェック
# Grimではバグのあるネットコードを考慮しています。右クリックやオフハンドボタンを連打しても、誤検知しにくくなっています。
# 他のアンチチートよりもはるかに安定していますが、もし誤検知があれば報告してください。ここで多くのネットコードの問題を修正しました。
NoSlowA:
  # どれだけのズレが「チート」と見なされるか
  # デフォルトでは他の設定よりも低く設定されています
  # NoSlowが有効な場合、0.03〜0.2の範囲で一貫してフラグが立ちます
  threshold: 0.001
  # NoSlowのアドバンテージを無くすために、最初の項目で即座にセットバックさせます
  setbackvl: 5
  # プレイヤーがアイテムを使用しているとき、かつそのアイテムで速度が低下しているときに減衰します
  decay: 0.05

Knockback:
  # プレイヤーが正当な場合に、総アドバンテージにどれだけの倍率を掛けますか？
  setback-decay-multiplier: 0.999
  # プレイヤーの速度からどれだけのズレがあった場合に違反とみなしますか？
  # 許容される速度からブロック単位で測定されます
  threshold: 0.001
  # プレイヤーが即座にセットバックされる前に、1ティックでどれだけの違反が発生すればいいかを指定します
  # -1で無効化
  immediate-setback-threshold: 0.1
  # どれだけのティック全体でのアドバンテージが発生すれば、セットバックを開始するかを指定します
  # -1で無効化
  max-advantage: 1
  # プレイヤーが違反を蓄積しすぎて、解消できなくなるのを防ぐための上限です
  max-ceiling: 4

Explosion:
  threshold: 0.001
  setbackvl: 3

TimerA:
  setbackvl: 10
  # プレイヤーが遅れているときに、後で使用できるよう蓄積できるミリ秒数
  # 1.8の高速使用や高速回復、高速弓バイパスを可能にする場合があるため、120ミリ秒が良いバランスです
  drift: 120
  # タイマーバランスを制限し、不正利用を防ぐためのピン値
  # 正当なプレイヤーにもセットバックを引き起こす可能性がありますが、このピン値を超えた場合にのみ影響します
  # -1で無効化
  ping-abuse-limit-threshold: 1000

NegativeTimer:
  # 移動中にどれだけミリ秒が失われたらフラグを立て始めるか
  drift: 1200

# TimerAと同じチェック方法ですが、これは乗り物用です
TimerVehicle:
  # 目標は1.005のタイマー
  setbackvl: 10

EntityControl:
  setbackvl: 25

Reach:
  # ヒットボックスをどれだけ拡大しますか？0.0005で3.0005以上のリーチを検出します
  #
  # 1.9～1.18.1（1.18.2は含まれません）の強制的な0.03の拡張、またはクライアントとサーバーの組み合わせによって
  # プロトコルの変更や制限が原因です。このチェックは、1.7/1.8クライアントで1.8サーバー上で最も効果的です。
  threshold: 0.0005
  # 不可能なヒットをキャンセルしますか？
  # 3.00〜3.03のヒットは通過することがありますが、それでもフラグが立ちます。これはパケット順序の制限によるものです
  block-impossible-hits: true
  # チートを検出する可能性を高めるために、ティックごとに追加のパケットを送信します
  # これはサーバーの接続リストに挿入され、サーバーがフラッシュする直前に最終パケットを送信します
  # これを有効にすると、すべてのプレイヤーの帯域幅使用量が増加します
  # サーバーのパフォーマンスは低下しません
  # 有効にすると、より多くのチーターを捕まえることができます。
  # 無効にしてもチーターを捕まえることができ、誤検知も発生しません
  # 1.8のPvPに特化したサーバーでない限り、この追加パケットは推奨されません
  enable-post-packet: false

exploit:
  # エリトラでスプリントジャンプをすると非常に高い速度を得られます。これをfalseに設定すると、そのエクスプロイトを防ぎます
  # Mojangはエリトラの開始をクライアント側、終了をサーバー側で処理するため、ネットコードが乱れました
  # エリトラは0.99の水平摩擦を持ち、0.2の水平速度を常に追加すると非常に高い速度になります。
  allow-sprint-jumping-when-using-elytra: true
  # ゴーストブロック上にプレイヤーが配置されるのを同期して修正するオプションです
  allow-building-on-ghostblocks: true
  # この設定は上記のbooleanに基づき、ゴーストブロックをチェックする距離を定義します
  # 有効な範囲は2から4までです
  distance-to-check-if-ghostblocks: 2

# Nettyに参加時にプラグインが注入された場合の互換性問題をデバッグするためにログを有効にします
debug-pipeline-on-join: false

# 実験的なチェックを有効にします
experimental-checks: false

# Grimはタイマーのような違法なパケットをキャンセルすることがありますが、1秒間にキャンセルされたパケット数がXを超えた場合、
# プレイヤーをキックする必要がありますか？これは、いくつかのパケットリミッターがGrimによってキャンセルされたパケットをカウントしないためです。
packet-spam-threshold: 100

# Grimは、飛行状態を解除されたプレイヤーがXミリ秒以上のピンを持つことを許可しません
# これは、Grimが現在飛行中のプレイヤーをチェックしていないためです
# 無効にするには、-1を使用してください
max-ping-out-of-flying: 1000

# プレイヤーからファイアワークブーストを削除する際の最大ピン値
# これにより、遅延の高いプレイヤーが1つのファイアワークブーストでエリトラを永久に使用するのを防ぎます。
max-ping-firework-boost: 1000

config-version: 9
