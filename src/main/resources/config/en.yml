# GrimAC main configuration
# Source code: https://github.com/MWHunter/Grim
# Copyright 2022 DefineOutside and contributors, Licensed under GPLv3.
# Modified binaries, or plugins with copied grim code, must be private,
# or with full source code available to buyers at no additional cost.

alerts:
  # Should players with grim.alerts permission automatically enable alerts on join?
  enable-on-join: true

client-brand:
  ignored-clients:
    - "vanilla"

# How long should players have until we keep them for timing out? Default = 2 minutes
max-ping: 120

Simulation:
  # How much should we multiply total advantage by when the player is legit
  # This is what the default config looks like (x axis = seconds, y axis = 1/1000 block): https://www.desmos.com/calculator/d4ufgxrxer
  setback-decay-multiplier: 0.999
  # How large of an offset from the player's movement should we create a violation for?
  # Measured in blocks from the possible movement
  # We account for Optifine by switching trig tables but dropping this to 0.001 will reduce FastMath
  # flagging the anticheat if this compensation doesn't work...
  threshold: 0.0001
  # How large of a violation in a tick before the player gets immediately setback?
  # -1 to disable
  immediate-setback-threshold: 0.1
  # How large of an advantage over all ticks before we start to setback?
  # -1 to disable
  max-advantage: 1
  # After 50 seconds with default config, the player will go from 4 blocks -> 1 block of advantage
  # This is to stop the player from gathering too many violations and never being able to clear them all
  # Default advantage ceiling (x axis = seconds, y axis = 1/1000 block): https://www.desmos.com/calculator/4lovswdarj
  max-ceiling: 4

# Checks to see if a player entered a block during a movement
Phase:
  setbackvl: 1 # Glitching into blocks can allow wall climbing, plus this check is relatively stable
  decay: 0.005
  dont-alert-until: 10
  alert-interval: 10

# Prediction-based no slow check
# Grim accounts for buggy netcode here... hard to false even when spamming right click and offhand button
# Much more stable than other anticheats, but please report any falses... I have fixed a ton of netcode issues here.
NoSlow:
  # How much of an offset is "cheating"
  # By default this is lower than other offs
  # Flags by 0.03-0.2 consistently with NoSlow on
  threshold: 0.001
  # Setback fast on the first item to remove any advantage NoSlow gives
  setbackvl: 5
  # Decay's when the player uses an item AND is slowed by it
  decay: 0.05
  # It takes 32 ticks to fully consume an item... 25 will safely flag cheats here
  dont-alert-until: 25
  # You likely don't want to be spammed with alerts. Target alerting once per item that wasn't slowed for
  alert-interval: 25

Knockback:
  # How much of an offset is "cheating"
  # By default this is 1e-5, which is safe and sane
  # Measured in blocks from the correct movement
  threshold: 0.00001
  setbackvl: 10
  decay: 0.025
  dont-alert-until: 8
  alert-interval: 5

Explosion:
  threshold: 0.00001
  setbackvl: 10
  decay: 0.025
  dont-alert-until: 8
  alert-interval: 5

TimerA:
  # Target 1.005 timer
  decay: 0.005
  setbackvl: 10
  dont-alert-until: 5
  alert-interval: 5
  # Milliseconds that the player can accumulate for later use when they fall behind
  # Could potentially allow 1.8 fast use/fast heal/fast bow bypasses if set too high, 120 ms seems like a good balance
  drift: 120

# Same check method as TimerA, but for vehicles
TimerVehicle:
  # Target 1.005 timer
  decay: 0.005
  setbackvl: 10
  dont-alert-until: 5
  alert-interval: 5

EntityControl:
  decay: 0.05
  setbackvl: 25
  dont-alert-until: 40
  alert-interval: 40

Reach:
  # How much should we expand hitboxes by? 0.0005 should detect 3.0005+ reach
  #
  # There is 0.03 forced expansion with 1.9-1.18.1 (not 1.18.2), or some client/server combinations due to
  # protocol changes and limitations. This check is most powerful with 1.7/1.8 clients on 1.8 servers.
  threshold: 0.0005
  # Should we cancel hits that we know are impossible?
  # 3.00-3.03 hits may go through but still be flagged, due to packet order limitations
  block-impossible-hits: true
  # This will send an additional packet at the end of every tick to increase the likelihood of catching cheats
  # This injects into server's connection list to send a final packet just before the server flushes
  # Enabling this will increase bandwidth usage for all players
  # This will not decrease overall server performance
  # Enabling this will catch more cheaters.
  # Leaving this disabled will still catch cheaters and will not cause false positives
  # Unless you are a 1.8 PvP focused server, this additional packet is not recommended
  enable-post-packet: false

config-version: 1