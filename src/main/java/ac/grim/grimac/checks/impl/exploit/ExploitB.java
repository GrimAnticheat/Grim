package ac.grim.grimac.checks.impl.exploit;

import ac.grim.grimac.checks.Check;
import ac.grim.grimac.checks.CheckData;
import ac.grim.grimac.checks.type.PacketCheck;
import ac.grim.grimac.player.GrimPlayer;
import com.github.retrooper.packetevents.PacketEvents;
import com.github.retrooper.packetevents.event.PacketReceiveEvent;
import com.github.retrooper.packetevents.manager.server.ServerVersion;
import com.github.retrooper.packetevents.protocol.packettype.PacketType;
import com.github.retrooper.packetevents.wrapper.play.client.WrapperPlayClientTabComplete;

@CheckData(name = "ExploitB", experimental = true)
public class ExploitB extends Check implements PacketCheck {

    public ExploitB(final GrimPlayer playerData) {
        super(playerData);
    }

    @Override
    public void onPacketReceive(final PacketReceiveEvent event) {
        if (event.getPacketType() != PacketType.Play.Client.TAB_COMPLETE ||
                PacketEvents.getAPI().getServerManager().getVersion().isOlderThan(ServerVersion.V_1_13)) return;

        final WrapperPlayClientTabComplete wrapper = new WrapperPlayClientTabComplete(event);
        final String text = wrapper.getText();
        if (!text.equals("/") && !text.trim().isEmpty()) return;

        if (flagAndAlert("")) {
            event.setCancelled(true);
            player.onPacketCancel();
        }
    }

}
